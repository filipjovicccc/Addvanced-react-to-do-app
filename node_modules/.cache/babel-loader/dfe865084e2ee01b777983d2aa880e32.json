{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lale\\\\Desktop\\\\Filip\\\\React to-do-app\\\\Advanced-react-to-do-app\\\\src\\\\components\\\\Form.js\";\nimport React from \"react\";\nimport TodoList from \"./TodoList\"; // submitTodoHendler\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [inputText, setInputText] = useState(\"\");\n\nconst Form = ({\n  setInputText,\n  inputText,\n  secondInputText,\n  setSecondText,\n  setStatus,\n  setTodos\n}) => {\n  const inputTextHandler = e => {\n    setInputText(e.target.value);\n    setSecondText(e.target.value);\n    setStatus(e.target.value);\n  };\n\n  const submitTodoHendler = e => {\n    e.preventDefault();\n\n    if (inputText === \"\") {\n      alert(\"Cannot have empty to do, or same to do twice in a row\");\n    } else setTodos([...todos, {\n      text: inputText,\n      completed: false,\n      id: Math.random() * 1000\n    }]);\n\n    setInputText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputText,\n      value: secondInputText,\n      onChange: inputTextHandler,\n      type: \"text\",\n      className: \"todo-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitTodoHendler,\n      className: \"todo-button\",\n      type: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-plus-square\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/Lale/Desktop/Filip/React to-do-app/Advanced-react-to-do-app/src/components/Form.js"],"names":["React","TodoList","inputText","setInputText","useState","Form","secondInputText","setSecondText","setStatus","setTodos","inputTextHandler","e","target","value","submitTodoHendler","preventDefault","alert","todos","text","completed","id","Math","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;;AAEA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,EAAD,CAA1C;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACF,EAAAA,YAAD;AAAeD,EAAAA,SAAf;AAA0BI,EAAAA,eAA1B;AAA2CC,EAAAA,aAA3C;AAA0DC,EAAAA,SAA1D;AAAqEC,EAAAA;AAArE,CAAD,KAAqF;AAChG,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC7BR,IAAAA,YAAY,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACAN,IAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACCL,IAAAA,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH,GAJD;;AAKA,QAAMC,iBAAiB,GAAIH,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIb,SAAS,KAAK,EAAlB,EAAqB;AACnBc,MAAAA,KAAK,CAAC,uDAAD,CAAL;AAED,KAHD,MAIAP,QAAQ,CAAC,CACP,GAAGQ,KADI,EACG;AAACC,MAAAA,IAAI,EAAEhB,SAAP;AAAkBiB,MAAAA,SAAS,EAAE,KAA7B;AAAoCC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,KAAc;AAAtD,KADH,CAAD,CAAR;;AAGAnB,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAVD;;AAaF,sBACM;AAAA,4BACE;AAAO,MAAA,KAAK,EAAGD,SAAf;AAA0B,MAAA,KAAK,EAAEI,eAAjC;AAAkD,MAAA,QAAQ,EAAEI,gBAA5D;AAA8E,MAAA,IAAI,EAAC,MAAnF;AAA0F,MAAA,SAAS,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEI,iBAAjB;AAAoC,MAAA,SAAS,EAAC,aAA9C;AAA4D,MAAA,IAAI,EAAC,QAAjE;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AASC,CA5BD;;KAAMT,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport TodoList from \"./TodoList\";\r\n\r\n// submitTodoHendler\r\n\r\nconst [inputText, setInputText] = useState(\"\");\r\n\r\nconst Form = ({setInputText, inputText, secondInputText, setSecondText, setStatus, setTodos }) => {\r\n  const inputTextHandler = (e) => {\r\n     setInputText(e.target.value)\r\n     setSecondText(e.target.value)\r\n      setStatus(e.target.value)\r\n  }\r\n  const submitTodoHendler = (e) => {\r\n    e.preventDefault();\r\n    if (inputText === \"\"){\r\n      alert(\"Cannot have empty to do, or same to do twice in a row\")\r\n    \r\n    } else\r\n    setTodos([ \r\n      ...todos, {text: inputText, completed: false, id: Math.random()*1000},\r\n    ])\r\n    setInputText(\"\")\r\n  }\r\n\r\n\r\nreturn(\r\n      <form>\r\n        <input value ={inputText} value={secondInputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n        <button onClick={submitTodoHendler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n\r\n     </form>\r\n    )\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}